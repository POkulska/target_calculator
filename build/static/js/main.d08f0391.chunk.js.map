{"version":3,"sources":["Components/Weights/Weights.js","Components/Results/Results.js","Components/TargetView/TargetView.js","Components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["Weights","weights","videoW","commentW","liveSW","className","Results","videoNum","commentNum","liveSNum","videoT","commentT","achievedFraction","targetFraction","console","log","toFixed","TargetView","Form","changeHandler","form","useRef","video","comment","action","ref","data-parent","type","placeholder","onClick","e","preventDefault","videoVal","current","value","commentVal","reset","App","useState","setVideoNum","setCommentNum","setLiveSNum","setVideoT","setCommentT","setWeights","useEffect","clickHandler","parent","currentTarget","dataset","job","id","data-job","LiveSNum","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4SAkBeA,G,MAfC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACTC,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,OACzB,OACE,yBAAKC,UAAU,UACb,wCACE,8CAAoBH,GACpB,wDAA8BC,GAE9B,4DAAkCC,OCR7BE,G,MAAU,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,SAAUR,EAA+B,EAA/BA,QAASS,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACjET,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,SACTS,GAAoBL,GAAUL,IAAUO,GADXR,EAAVG,SACyCI,GAAYL,EACxEU,EAAkBH,EAASC,EAAaD,EAAOR,EAAWS,EAASR,EAEzE,OADAW,QAAQC,IAAI,CAACH,mBAAkBC,iBAAgBH,SAAQC,WAAUF,WAAUR,UAAQO,aAAYD,cAE5FA,GAAYG,GAAYF,GAAcG,GAAaF,IAClD,yBAAKJ,UAAU,kBACd,6BAASA,UAAU,YAClB,iDAAwBO,GACxB,mDAAyBA,EAAiBC,EAAe,KAAKG,QAAQ,GAAtE,QAGD,6BAASX,UAAU,aAClB,6DAAoCQ,EAAiBD,GAAkBC,EAAe,KAAKG,QAAQ,GAAnG,MACA,oDAA0BH,EAAiBD,OCdtCK,G,MAAa,SAAC,GAAD,IAAEP,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OAAwB,yBAAKN,UAAU,cAC/D,gDAAsBK,GACtB,kDAAwBC,MCHbO,G,MAAO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACdC,EAAOC,iBAAO,MACdC,EAAQD,iBAAO,MACfE,EAAUF,iBAAO,MAQvB,OACE,0BAAMG,OAAO,GAAGC,IAAKL,EAAMf,UAAU,aACnC,4BACE,iDAAsB,2BAAOoB,IAAKH,EAAOI,cAAY,QAAQC,KAAK,SAASC,YAAY,iBACvF,kCACA,kDAAuB,2BAAOH,IAAKF,EAASG,cAAY,UAAUC,KAAK,SAASC,YAAY,kBAE9F,4BAAQC,QAdS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAWV,EAAMW,QAAQC,MACzBC,EAAaZ,EAAQU,QAAQC,MACnCf,EAAca,EAAUG,GACxBf,EAAKa,QAAQG,UASX,a,MC2FSC,MAzGf,WAAgB,IAAD,EACmBC,mBAAS,GAD5B,mBACN/B,EADM,KACIgC,EADJ,OAEuBD,mBAAS,GAFhC,mBAEN9B,EAFM,KAEMgC,EAFN,OAGmBF,mBAAS,GAH5B,mBAGN7B,EAHM,KAGIgC,EAHJ,OAIeH,mBAAS,MAJxB,mBAIN5B,EAJM,KAIEgC,EAJF,OAKmBJ,mBAAS,MAL5B,mBAKN3B,EALM,KAKIgC,EALJ,OAMiBL,mBAAS,CACrCpC,OAAQ,EACRC,SAAU,EACVC,OAAQ,IATG,mBAMNH,EANM,KAMG2C,EANH,KAYbC,qBAAU,WACR,IAAI3C,EACAC,EACAC,EACAM,GAAUC,GAAYD,EAASC,GACjCT,GAAUQ,EAASA,EACnBP,IAAaO,EAASC,GAAUK,QAAQ,GACxCZ,EAAS,KAAOF,GACPQ,GAAUC,GAAaD,EAASC,GACzCT,IAAWQ,EAASC,GAAUK,QAAQ,GACtCb,GAAYQ,EAAWA,EACvBP,EAAS,KAAOF,GACPK,GAAYC,IACrBN,EAAS,EACTC,EAAW,EACXC,EAAS,KAEXU,QAAQC,IAAI,iBACZ6B,EAAW,CACT1C,SACAC,WACAC,aAED,CAACM,EAAQH,EAAUI,EAAUH,EAAYC,IAE5C,IAAMqC,EAAe,SAAAhB,GACnB,IAAMiB,EAASjB,EAAEkB,cAAcC,QAAQF,OACjCG,EAAMpB,EAAEkB,cAAcC,QAAQC,IAErB,UAAXH,GAAsBxC,GAAY,EACxB,SAAR2C,EACFX,EAAYhC,EAAS,GACA,IAAbA,GACRgC,EAAYhC,EAAS,GAEH,YAAXwC,EACG,SAARG,EACFV,EAAchC,EAAW,GACF,IAAfA,GACRgC,EAAchC,EAAW,IAI3BM,QAAQC,IAAI,CAACN,aACD,SAARyC,EACFT,EAAYhC,EAAS,GACA,IAAbA,GACRgC,EAAYhC,EAAS,KAa3B,OACE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,QAAO,+CACtB,yBAAKA,UAAU,iBACf,kBAAC,EAAD,CAAMc,cAZY,SAACa,EAAUG,GAC3BH,GACFU,GAAWV,GAETG,GACFQ,GAAaR,MAQb,kBAAC,EAAD,CAAYxB,SAAUA,EAAUD,OAAQA,IACxC,kBAAC,EAAD,CAAST,QAASA,KAGlB,yBAAKkD,GAAG,SACN,0BAAM9C,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,QAAQ0B,WAAS,SAA7E,KACA,0BAAM/C,UAAU,QAAhB,SACA,0BAAMA,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,QAAQ0B,WAAS,QAA7E,KACC,MAAO7C,GAEV,yBAAK4C,GAAG,WACN,0BAAM9C,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,UAAU0B,WAAS,SAA/E,KACA,0BAAM/C,UAAU,QAAhB,WACA,0BAAMA,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,UAAU0B,WAAS,QAA/E,KACC,MAAO5C,GAEV,yBAAK2C,GAAG,cACN,0BAAM9C,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,aAAa0B,WAAS,SAAlF,KACA,0BAAM/C,UAAU,QAAhB,eACA,0BAAMA,UAAU,SAASwB,QAASiB,EAAcpB,cAAY,aAAa0B,WAAS,QAAlF,KACC,MAAO3C,GAGV,kBAAC,EAAD,CAASD,WAAYA,EAAYC,SAAUA,EAAUR,QAASA,EAASoD,SAAU5C,EAAUF,SAAUA,EAAUG,OAAQA,EAAQC,SAAUA,MC/F3H2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxD,QAAQwD,MAAMA,EAAMC,c","file":"static/js/main.d08f0391.chunk.js","sourcesContent":["import React from 'react'\r\nimport './weights_style.css'\r\n\r\nconst Weights = ({weights}) => {\r\n  const {videoW, commentW, liveSW} = weights\r\n  return (\r\n    <div className=\"header\">\r\n      <div >Weights:\r\n        <div>video weight: {videoW}</div>\r\n        <div>        comment weight: {commentW}\r\n        </div>\r\n        <div>        live stream weight: {liveSW}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weights","import React from 'react'\r\nimport './results_style.css'\r\n\r\nexport const Results = ({videoNum, commentNum, liveSNum, weights, videoT, commentT}) => {\r\n  const {videoW, commentW, liveSW} = weights\r\n  const achievedFraction = +videoNum*+videoW + +liveSNum*+liveSW + +commentNum*+commentW\r\n  const targetFraction = (videoT < commentT) ? (videoT*videoW) : (commentT*commentW)\r\n  console.log({achievedFraction, targetFraction, videoT, commentT, liveSNum, weights,commentNum, videoNum})\r\n  return (\r\n   ((videoNum && videoT) || (commentNum && commentT) || liveSNum) && (\r\n      <div className=\"resultsDisplay\">\r\n       <section className=\"achieved\">\r\n        <div>Achieved target: {(achievedFraction)}</div>\r\n        <div>Achieved percent: {(achievedFraction/targetFraction*100).toFixed(2)} % </div>\r\n       </section>\r\n\r\n       <section className=\"remaining\">\r\n        <div >Remaining target percent:  {((targetFraction - achievedFraction)/targetFraction*100).toFixed(2)} %</div>\r\n        <div> Remaining target : {targetFraction - achievedFraction}</div>\r\n      </section>\r\n\r\n        \r\n\r\n        \r\n      </div>\r\n    )\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './target_style.css'\r\n\r\n\r\nexport const TargetView = ({videoT, commentT}) => <div className=\"targetView\">\r\n  <div> Target Video : {videoT}</div>\r\n  <div> Target Comment : {commentT}</div>\r\n</div>","import React, { useRef } from 'react'\r\nimport './form_style.css'\r\n\r\nexport const Form = ({changeHandler}) => {\r\n  const form = useRef(null)\r\n  const video = useRef(null)\r\n  const comment = useRef(null)\r\n  const changehandle = e => {\r\n    e.preventDefault()\r\n    const videoVal = video.current.value;\r\n    const commentVal = comment.current.value;\r\n    changeHandler(videoVal, commentVal)\r\n    form.current.reset()\r\n  }\r\n  return (\r\n    <form action=\"\" ref={form} className=\"formStyle\">\r\n      <ul>\r\n        <li>Target in videos: <input ref={video} data-parent=\"video\" type=\"number\" placeholder=\"Write value\"/></li>\r\n        <li>or</li>\r\n        <li>Target in comments:<input ref={comment} data-parent=\"comment\" type=\"number\" placeholder=\"Write value\"/></li>\r\n      </ul>\r\n      <button onClick={changehandle}>submit</button>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Weights from './Components/Weights/Weights'\r\nimport { Results } from './Components/Results'\r\nimport { TargetView } from './Components/TargetView'\r\nimport { Form } from './Components/Form'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [videoNum, setVideoNum] = useState(0)\r\n  const [commentNum, setCommentNum] = useState(0)\r\n  const [liveSNum, setLiveSNum] = useState(0)\r\n  const [videoT, setVideoT] = useState(null)\r\n  const [commentT, setCommentT] = useState(null)\r\n  const [weights, setWeights] = useState({\r\n    videoW: 0,\r\n    commentW: 0,\r\n    liveSW: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    let videoW;\r\n    let commentW;\r\n    let liveSW;\r\n    if (videoT && commentT && videoT < commentT) {\r\n      videoW = +videoT / videoT;\r\n      commentW = +(videoT / commentT).toFixed(2);\r\n      liveSW = 1.5 * +videoW;\r\n    } else if (videoT && commentT &&  videoT > commentT) {\r\n      videoW = +(videoT / commentT).toFixed(2);\r\n      commentW = +commentT / commentT;\r\n      liveSW = 1.5 * +videoW;\r\n    } else if (videoNum && commentNum) {\r\n      videoW = 1;\r\n      commentW = 1;\r\n      liveSW = 1.5;\r\n    }\r\n    console.log('weights reset')\r\n    setWeights({\r\n      videoW,\r\n      commentW,\r\n      liveSW\r\n    })\r\n  }, [videoT, videoNum, commentT, commentNum, liveSNum])\r\n\r\n  const clickHandler = e => {\r\n    const parent = e.currentTarget.dataset.parent\r\n    const job = e.currentTarget.dataset.job;\r\n\r\n    if (parent === 'video' && videoNum >= 0) {\r\n      if (job === 'plus') {\r\n        setVideoNum(videoNum+1)\r\n      } else if(videoNum !== 0) {\r\n        setVideoNum(videoNum-1)\r\n      }\r\n    } else if (parent === 'comment') {\r\n      if (job === 'plus') {\r\n        setCommentNum(commentNum+1)\r\n      } else if(commentNum !== 0) {\r\n        setCommentNum(commentNum-1)\r\n      }\r\n    \r\n    } else {\r\n      console.log({liveSNum})\r\n      if (job === 'plus') {\r\n        setLiveSNum(liveSNum+1)\r\n      } else if(liveSNum !== 0) {\r\n        setLiveSNum(liveSNum-1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const changeHandler = (videoVal, commentVal) => {\r\n    if (videoVal) {\r\n      setVideoT(+videoVal)\r\n    }\r\n    if (commentVal) {\r\n      setCommentT(+commentVal)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main\"><h1>TARGET COUNTER</h1></div>\r\n      <div className=\"flexContainer\">\r\n      <Form changeHandler={changeHandler}/>\r\n      <TargetView commentT={commentT} videoT={videoT}/>\r\n      <Weights weights={weights}/>\r\n      </div>\r\n\r\n      <div id=\"video\">\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"video\" data-job=\"minus\">-</span>\r\n        <span className=\"text\">Video</span>\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"video\" data-job=\"plus\">+</span>\r\n        {' : '}{videoNum}\r\n      </div>\r\n      <div id=\"comment\">\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"comment\" data-job=\"minus\">-</span>\r\n        <span className=\"text\">Comment</span>\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"comment\" data-job=\"plus\">+</span>\r\n        {' : '}{commentNum}\r\n      </div>\r\n      <div id=\"livestream\">\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"livestream\" data-job=\"minus\">-</span>\r\n        <span className=\"text\">Live Stream</span>\r\n        <span className=\"button\" onClick={clickHandler} data-parent=\"livestream\" data-job=\"plus\">+</span>\r\n        {' : '}{liveSNum}\r\n      </div>\r\n\r\n      <Results commentNum={commentNum} liveSNum={liveSNum} weights={weights} LiveSNum={liveSNum} videoNum={videoNum} videoT={videoT} commentT={commentT} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}